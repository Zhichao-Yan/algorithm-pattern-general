### 深度优先遍历
1. [迷宫问题](https://www.nowcoder.com/practice/cf24906056f4488c9ddb132f317e03bc?tpId=37&tqId=21266&rp=1&ru=/exam/oj/ta&qru=/exam/oj/ta&sourceUrl=%2Fexam%2Foj%2Fta%3Fdifficulty%3D3%26page%3D1%26pageSize%3D50%26search%3D%26tpId%3D37%26type%3D37&difficulty=3&judgeStatus=undefined&tags=&title=)
```C++
#include <iostream>
#include <vector>
using namespace std;
vector<pair<int,int>> S;
int n,m;
int x[4]={1,0,-1,0};
int y[4]={0,1,0,-1};
bool reachable(vector<vector<int>> &dp,int i,int j);
bool dfs(vector<vector<int>> &dp,int i,int j);
int main() {
    cin>>n>>m;
    vector<vector<int>> dp(n,vector<int>(m,0));
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            cin>>dp[i][j];
        }
    }
    dfs(dp,0,0);
    for(auto it=S.begin();it!=S.end();it++)
        cout<<'('<<it->first<<','<<it->second<<')'<<endl;
    return 0;
}
bool dfs(vector<vector<int>> &dp,int i,int j)
{
    S.push_back(make_pair(i,j));
    if(i==n-1&&j==m-1)
        return true;
    dp[i][j]=1;
    bool flag=false;
    for(int k=0;k<4;k++)
    {
        if(reachable(dp,i+y[k],j+x[k]))
        {
            if(dfs(dp,i+y[k],j+x[k]))
                flag=true;
        }  
    }
    if(flag==false)
    {
        S.pop_back();
    }
    return flag;
}
bool reachable(vector<vector<int>> &dp,int i,int j)
{
    if(i>=0&&i<n&&j>=0&&j<m&&dp[i][j]==0)
        return true;
    else
        return false;
}
// 64 位输出请用 printf("%lld")
```